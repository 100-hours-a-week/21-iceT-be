---
openapi: 3.0.1
info:
  title: Test API
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: User
    description: 사용자 관련 API
  - name: Solution
    description: 해설 관련 API | 백 - AI
  - name: ProblemSet
    description: 문제집 관련 API
  - name: Survey
    description: 사용자 설문 관련 API
  - name: Auth
    description: 카카오 OAuth 인증 관련 API
paths:
  "/api/backend/v1/users/me":
    get:
      tags:
        - User
      summary: 유저 정보 조회
      operationId: getUserInfo
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
        - User
      summary: 사용자 정보 등록
      operationId: updateUserInfo
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                statusMsg:
                  type: string
                profileImg:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserResponse"
    delete:
      tags:
        - User
      summary: 사용자 탈퇴
      operationId: deleteUser
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseObject"
  "/api/backend/v1/solution":
    post:
      tags:
        - Solution
      summary: AI서버로부터 해설 저장
      operationId: receiveSolution
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AiSolutionRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/backend/v1/problem-set/surveys":
    post:
      tags:
        - Survey
      summary: 설문 응답 저장
      operationId: submitSurvey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProblemSetSurveyRequestDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseSurveyResponseDto"
  "/api/backend/v1/auth/refresh":
    post:
      tags:
        - Auth
      summary: 리프레쉬 토큰 기반 재발급
      operationId: refreshToken
      parameters:
        - name: refresh_token
          in: cookie
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/RefreshResponse"
  "/api/backend/v1/auth/logout":
    post:
      tags:
        - Auth
      summary: 로그아웃
      operationId: logout
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LogoutResponse"
  "/api/backend/v1/users/algorithm-stats":
    get:
      tags:
        - User
      summary: 사용자별 알고리즘 통계 조회
      operationId: getAlgorithmStats
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/backend/v1/problem-set":
    get:
      tags:
        - ProblemSet
      summary: 날짜별 문제집 조회
      operationId: getProblemSetByDate
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ApiResponseProblemSetResponseDto"
  "/api/backend/v1/problem-set/{problemNumber}/solution":
    get:
      tags:
        - ProblemSet
      summary: 문제 별 해설 조회
      operationId: getProblemSolution
      parameters:
        - name: problemNumber
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/backend/v1/auth/callback":
    get:
      tags:
        - Auth
      summary: 카카오 콜백
      operationId: kakaoCallback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/AuthResponse"
components:
  schemas:
    UserResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AiSolutionRequestDto:
      type: object
      properties:
        problemNumber:
          type: integer
          format: int64
        problem_check:
          "$ref": "#/components/schemas/ProblemCheck"
        problem_solving:
          type: string
        solution_code:
          "$ref": "#/components/schemas/SolutionCode"
    ProblemCheck:
      type: object
      properties:
        problem_description:
          type: string
        algorithm:
          type: string
    SolutionCode:
      type: object
      properties:
        python:
          type: string
        cpp:
          type: string
        java:
          type: string
    ProblemSetSurveyRequestDto:
      type: object
      properties:
        problemSetId:
          type: integer
          format: int64
        responses:
          type: array
          items:
            "$ref": "#/components/schemas/ProblemSurveyRequestDto"
    ProblemSurveyRequestDto:
      type: object
      properties:
        problemId:
          type: integer
          format: int64
        difficultyLevel:
          type: string
        solved:
          type: boolean
    ApiResponseSurveyResponseDto:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/SurveyResponseDto"
    SurveyResponseDto:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64
    RefreshResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          type: object
          additionalProperties:
            type: string
    Data:
      type: object
      properties:
        redirectUrl:
          type: string
    LogoutResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/Data"
    ApiResponseProblemSetResponseDto:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/ProblemSetResponseDto"
    ProblemDto:
      type: object
      properties:
        problemNumber:
          type: integer
          format: int64
        problemId:
          type: integer
          format: int64
        title:
          type: string
        tier:
          type: string
        bojUrl:
          type: string
    ProblemSetResponseDto:
      type: object
      properties:
        date:
          type: string
          format: date
        problemSetId:
          type: integer
          format: int64
        problems:
          type: array
          items:
            "$ref": "#/components/schemas/ProblemDto"
        isAnswered:
          type: boolean
    AuthData:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        isRegistered:
          type: boolean
    AuthResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          "$ref": "#/components/schemas/AuthData"
    ApiResponseObject:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          type: object
